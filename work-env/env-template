# ========================================
# EXTENDED AI STACK CONFIGURATION
# ========================================
# Change the name of this file to .env after updating it!
# 
# Generate secure keys with:
# openssl rand -base64 32
# openssl rand -hex 32
# 
# For production deployment, ALL default values MUST be changed!

############
# [REQUIRED] CORE AI STACK - N8N & Security
############

# N8N credentials - set to long and secure strings!
N8N_ENCRYPTION_KEY=super-secret-key-change-this-min-32-chars
N8N_USER_MANAGEMENT_JWT_SECRET=even-more-secret-change-this-too

# N8N Configuration
N8N_HOST=localhost
N8N_PROTOCOL=http
N8N_PORT=5678
N8N_WEBHOOK_URL=http://localhost:5678/
N8N_EDITOR_BASE_URL=http://localhost:5678
GENERIC_TIMEZONE=Europe/Berlin

# N8N Extended Instance
N8N_EXTENDED_HOST=localhost
N8N_EXTENDED_PORT=5679
N8N_EXTENDED_WEBHOOK_URL=http://localhost:5679/

############
# [REQUIRED] DATABASE & SUPABASE CONFIGURATION
############

# Primary PostgreSQL Configuration
# Note: Avoid '%' and special symbols in passwords for connection string compatibility
POSTGRES_PASSWORD=your-super-secure-postgres-password-change-this
POSTGRES_HOST=supabase-db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
POSTGRES_USER=postgres

# Supabase Authentication & API Keys
# Generate with: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q

# Supabase Dashboard
DASHBOARD_USERNAME=supabase
DASHBOARD_PASSWORD=this_password_is_insecure_and_should_be_updated
POOLER_TENANT_ID=1000

# Supabase URLs and Settings
SITE_URL=http://localhost:3000
API_EXTERNAL_URL=http://localhost:8000
SUPABASE_PUBLIC_URL=http://localhost:8000
ADDITIONAL_REDIRECT_URLS=
DISABLE_SIGNUP=false
JWT_EXPIRY=3600

############
# [REQUIRED] GUACAMOLE & DESKTOP CONFIGURATION
############

# Guacamole Database
GUAC_POSTGRES_DB=guacamole_db
GUAC_POSTGRES_USER=guacamole_user
GUAC_POSTGRES_PASSWORD=secure-guacamole-db-password

# Desktop Environment
DESKTOP_USER=kasm-user
DESKTOP_PASSWORD=password
VNC_PASSWORD=password
DESKTOP_TIMEZONE=Europe/Berlin

############
# [REQUIRED] AI SERVICES CONFIGURATION
############

# Ollama Configuration
OLLAMA_HOST=http://ollama:11434
OLLAMA_MODELS=llama3.1,codellama,mistral

# Open WebUI
WEBUI_SECRET_KEY=your-secure-webui-secret-key-change-this
WEBUI_AUTH=true
WEBUI_DEFAULT_USER_ROLE=user

# Qdrant Vector Database
QDRANT_API_KEY=your-qdrant-api-key-optional-for-local
QDRANT_COLLECTION_NAME=default

############
# [REQUIRED] EXTENDED SERVICES CONFIGURATION
############

# AppFlowy Configuration
APPFLOWY_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/appflowy
APPFLOWY_API_URL=http://appflowy:8080/api
APPFLOWY_API_KEY=generate-your-appflowy-api-key

# AFFINE Configuration  
AFFINE_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/affine
AFFINE_REDIS_HOST=redis
AFFINE_REDIS_PORT=6379
AFFINE_SERVER_HOST=0.0.0.0
AFFINE_SERVER_PORT=3010
AFFINE_API_URL=http://affine:3010/api
AFFINE_API_KEY=generate-your-affine-api-key

# GitLab Configuration
GITLAB_HOSTNAME=gitlab.local
GITLAB_ROOT_PASSWORD=change-this-gitlab-root-password
GITLAB_POSTGRES_DB=gitlab
GITLAB_POSTGRES_USER=gitlab
GITLAB_POSTGRES_PASSWORD=secure-gitlab-db-password
GITLAB_EXTERNAL_URL=http://localhost:8082
GITLAB_SSH_PORT=2222

# GitLab Integration
GITLAB_TOKEN=generate-your-gitlab-personal-access-token
GITLAB_URL=http://gitlab:8082

# Redis Configuration
REDIS_PASSWORD=optional-redis-password

############
# [OPTIONAL] WORKFLOW INTEGRATION
############

# GitHub Integration
GITHUB_TOKEN=your-github-personal-access-token
GITHUB_ORG=your-github-organization

# Project Management Integration
OPENPROJECT_URL=https://your-openproject-instance.com
OPENPROJECT_TOKEN=your-openproject-api-token
OPENPROJECT_NEW_STATUS_ID=1
OPENPROJECT_IN_PROGRESS_STATUS_ID=7
OPENPROJECT_PR_CREATED_STATUS_ID=2
OPENPROJECT_RESOLVED_STATUS_ID=12

# LLM API Configuration
LLM_API_KEY=your-anthropic-or-openai-api-key
LLM_MODEL=anthropic/claude-3-5-sonnet-20240620
OPENAI_API_KEY=your-openai-api-key-for-supabase-assistant

# OpenHands Configuration
OPENHANDS_API_URL=http://localhost:3001
OPENHANDS_MODEL=${LLM_MODEL}

############
# [OPTIONAL] NOTIFICATION & WEBHOOKS
############

# Discord Notifications
DISCORD_WEBHOOK_URL=your-discord-webhook-url

# Webhook Security
WEBHOOK_SECRET=generate-a-secure-random-webhook-secret

# Email Configuration (Supabase)
SMTP_ADMIN_EMAIL=admin@yourdomain.com
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password
SMTP_SENDER_NAME=Extended AI Stack
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=false
ENABLE_ANONYMOUS_USERS=false

# Phone Authentication (optional)
ENABLE_PHONE_SIGNUP=false
ENABLE_PHONE_AUTOCONFIRM=false

############
# [OPTIONAL] LANGFUSE OBSERVABILITY
############

# Langfuse credentials - generate secure keys
CLICKHOUSE_PASSWORD=super-secret-clickhouse-key
MINIO_ROOT_PASSWORD=super-secret-minio-key
LANGFUSE_SALT=super-secret-langfuse-salt
NEXTAUTH_SECRET=super-secret-nextauth-key
ENCRYPTION_KEY=generate-with-openssl-rand-hex-32

############
# [PRODUCTION] REVERSE PROXY & SSL
############

# Caddy/Domain Configuration (uncomment for production)
# N8N_HOSTNAME=n8n.yourdomain.com
# WEBUI_HOSTNAME=webui.yourdomain.com  
# GUACAMOLE_HOSTNAME=desktop.yourdomain.com
# APPFLOWY_HOSTNAME=notes.yourdomain.com
# AFFINE_HOSTNAME=workspace.yourdomain.com
# GITLAB_HOSTNAME=git.yourdomain.com
# SUPABASE_HOSTNAME=db.yourdomain.com
# OLLAMA_HOSTNAME=ai.yourdomain.com
# LETSENCRYPT_EMAIL=admin@yourdomain.com

############
# [OPTIONAL] ADVANCED CONFIGURATION
############

# Organization & Project Mapping
ORG_NAME=your-organization-name
SKIP_REPOS=repo1,repo2,test-repo
ONLY_REPOS=important-repo,main-project

# Project Mapping (JSON format)
PROJECT_MAPPING={"your-org/repo-1": {"projectId": "1", "projectName": "Main Project", "newIssueStatus": "1", "inProgressStatus": "7", "prStatus": "2", "resolvedStatus": "12"}}

# MCP (Model Context Protocol) Configuration
MCP_ENABLED=true
MCP_SERVER_PORT=3333
MCP_SERVER_HOST=localhost
MCP_DEFAULT_TOOLS=create_github_issue,update_work_package,sync_documentation,create_gitlab_mr

# Logging Configuration
LOG_LEVEL=info
LOG_DIR=./logs

# Performance Tuning
SEARXNG_UWSGI_WORKERS=4
SEARXNG_UWSGI_THREADS=4

############
# [SYSTEM] DOCKER & NETWORKING
############

# Docker Configuration
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Network Configuration
NETWORK_NAME=extended-ai-network

# Port Configuration (for reference)
# Guacamole: 8080
# N8N: 5678
# N8N Extended: 5679  
# Open WebUI: 3000
# Ollama: 11434
# Qdrant: 6333
# AppFlowy: 8081
# AFFINE: 3010
# GitLab: 8082
# Supabase: 8000
# Desktop VNC: 6901

############
# [INTERNAL] SERVICE URLS - DO NOT CHANGE
############

# Internal service communication URLs
INTERNAL_N8N_URL=http://n8n:5678
INTERNAL_OLLAMA_URL=http://ollama:11434
INTERNAL_QDRANT_URL=http://qdrant:6333
INTERNAL_APPFLOWY_URL=http://appflowy:8080
INTERNAL_AFFINE_URL=http://affine:3010
INTERNAL_GITLAB_URL=http://gitlab:8082
INTERNAL_DESKTOP_URL=http://desktop:6901

############
# [OPTIONAL] DATABASE POOLING & ADVANCED
############

# Supavisor Database Pooler
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE=generate-32-char-secret-key-base
VAULT_ENC_KEY=generate-32-character-encryption-key

# Kong API Gateway
KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443

# PostgREST Configuration
PGRST_DB_SCHEMAS=public,storage,graphql_public

# Studio Configuration
STUDIO_DEFAULT_ORGANIZATION=Extended AI Organization
STUDIO_DEFAULT_PROJECT=Main Project
STUDIO_PORT=3000

# Functions Configuration
FUNCTIONS_VERIFY_JWT=false

# Logflare Configuration (optional)
LOGFLARE_LOGGER_BACKEND_API_KEY=your-logflare-key
LOGFLARE_API_KEY=your-logflare-key

# Google Cloud (optional)
GOOGLE_PROJECT_ID=your-google-project-id
GOOGLE_PROJECT_NUMBER=your-google-project-number

# Image Processing
IMGPROXY_ENABLE_WEBP_DETECTION=true

############
# [SECURITY] MAILER CONFIGURATION
############

MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

############
# [DEVELOPMENT] DEBUG & TESTING
############

# Development Mode (set to false for production)
DEV_MODE=true
DEBUG_ENABLED=false

# Testing Configuration
TEST_DATABASE_URL=postgres://postgres:testpass@localhost:5433/test_db

############
# [BACKUP] CONFIGURATION
############

# Backup Settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=./backups

# S3 Backup (optional)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_S3_BUCKET=your-backup-bucket
# AWS_REGION=us-east-1

############
# SETUP INSTRUCTIONS
############

# 1. Copy this file to .env
# 2. Generate secure passwords/keys:
#    openssl rand -base64 32  # for most secrets
#    openssl rand -hex 32     # for encryption keys
# 3. Update all values marked with "change-this" or "your-"
# 4. For production: uncomment and configure domain settings
# 5. Run: python3 start-extended-stack.py --profile cpu
# 6. Access Guacamole at http://localhost:8080 (guacadmin/guacadmin)
# 7. Configure desktop connection to access all services

############
# QUICK SETUP COMMANDS
############

# Generate N8N encryption key:
# openssl rand -base64 32

# Generate JWT secret:
# openssl rand -base64 32

# Generate encryption key:
# openssl rand -hex 32

# Test configuration:
# docker-compose -f docker-compose-extended.yml config

# Start services:
# python3 start-extended-stack.py --profile cpu
